{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raiha\\\\Desktop\\\\react-flask\\\\client\\\\src\\\\audiorecorder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [latestAudio, setLatestAudio] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const audioRef = useRef(null);\n  const toggleRecording = async () => {\n    recording ? stopRecording() : await startRecording();\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = []; // Clear previous chunks\n\n      mediaRecorderRef.current.ondataavailable = e => {\n        if (e.data.size > 0) {\n          audioChunksRef.current.push(e.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = saveRecording;\n      mediaRecorderRef.current.start();\n      setRecording(true);\n    } catch (error) {\n      console.error(\"Error accessing microphone:\", error);\n    }\n  };\n  const stopRecording = () => {\n    var _mediaRecorderRef$cur;\n    if (((_mediaRecorderRef$cur = mediaRecorderRef.current) === null || _mediaRecorderRef$cur === void 0 ? void 0 : _mediaRecorderRef$cur.state) === \"recording\") {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  const saveRecording = () => {\n    if (audioChunksRef.current.length === 0) return; // Prevent empty recordings\n\n    const audioBlob = new Blob(audioChunksRef.current, {\n      type: \"audio/wav\"\n    });\n    const file = new File([audioBlob], `recording_${Date.now()}.wav`, {\n      type: \"audio/wav\"\n    });\n    const url = URL.createObjectURL(audioBlob);\n\n    // Revoke old URL if it exists\n    if (latestAudio) {\n      URL.revokeObjectURL(latestAudio.url);\n    }\n    setLatestAudio({\n      url,\n      file\n    });\n    audioChunksRef.current = [];\n    const data = new FormData();\n    data.append(\"file\", file);\n    fetch(\"/uploadone\", {\n      method: \"POST\",\n      body: data\n    }).then(res => res.json()).then(data => console.log(data.msg)).catch(error => console.error(\"Upload error:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Audio Recorder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleRecording,\n      children: recording ? \"Stop Recording\" : \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), latestAudio && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Latest Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: latestAudio.file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: latestAudio.url,\n          type: \"audio/wav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), \"Your browser does not support the audio element.\"]\n      }, latestAudio.url, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"JiUJc3GxH0aeADIuVqwkHUJMQv0=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","AudioRecorder","_s","recording","setRecording","latestAudio","setLatestAudio","mediaRecorderRef","audioChunksRef","audioRef","toggleRecording","stopRecording","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","e","data","size","push","onstop","saveRecording","start","error","console","_mediaRecorderRef$cur","state","stop","length","audioBlob","Blob","type","file","File","Date","now","url","URL","createObjectURL","revokeObjectURL","FormData","append","fetch","method","body","then","res","json","log","msg","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","ref","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/raiha/Desktop/react-flask/client/src/audiorecorder.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst AudioRecorder = () => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [latestAudio, setLatestAudio] = useState(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n  const audioRef = useRef(null);\r\n\r\n  \r\n\r\n  const toggleRecording = async () => {\r\n    recording ? stopRecording() : await startRecording();\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n      audioChunksRef.current = []; // Clear previous chunks\r\n      \r\n      mediaRecorderRef.current.ondataavailable = (e) => {\r\n        if (e.data.size > 0) {\r\n          audioChunksRef.current.push(e.data);\r\n        }\r\n      };\r\n      \r\n      mediaRecorderRef.current.onstop = saveRecording;\r\n      mediaRecorderRef.current.start();\r\n      setRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error accessing microphone:\", error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current?.state === \"recording\") {\r\n      mediaRecorderRef.current.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  const saveRecording = () => {\r\n    if (audioChunksRef.current.length === 0) return; // Prevent empty recordings\r\n    \r\n    const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n    const file = new File([audioBlob], `recording_${Date.now()}.wav`, { type: \"audio/wav\" });\r\n    const url = URL.createObjectURL(audioBlob);\r\n    \r\n    // Revoke old URL if it exists\r\n    if (latestAudio) {\r\n      URL.revokeObjectURL(latestAudio.url);\r\n    }\r\n    \r\n    setLatestAudio({ url, file });\r\n    audioChunksRef.current = [];\r\n    \r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    fetch(\"/uploadone\", { method: \"POST\", body: data })\r\n      .then((res) => res.json())\r\n      .then((data) => console.log(data.msg))\r\n      .catch((error) => console.error(\"Upload error:\", error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Audio Recorder</h2>\r\n      <button onClick={toggleRecording}>{recording ? \"Stop Recording\" : \"Start Recording\"}</button>\r\n      {latestAudio && (\r\n        <div>\r\n          <h3>Latest Recording</h3>\r\n          <p>{latestAudio.file.name}</p>\r\n          <audio ref={audioRef} key={latestAudio.url} controls>\r\n            <source src={latestAudio.url} type=\"audio/wav\" />\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}