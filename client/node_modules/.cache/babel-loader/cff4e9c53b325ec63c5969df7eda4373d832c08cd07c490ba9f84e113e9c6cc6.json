{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raiha\\\\Desktop\\\\fullstack\\\\reactpractice\\\\react-flask\\\\server\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [content, setContent] = useState('');\n  const [name, setName] = useState('');\n  const [photo, setPhoto] = useState('');\n  const inputRef = useRef();\n  const fileRef = useRef();\n  function getContent() {\n    const value = inputRef.current.value;\n    fetch(`/home/${value}`).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      setContent(data.data);\n      setName(data.name);\n      setPhoto(data.photo);\n    });\n  }\n  function postContent() {\n    const value = inputRef.current.value;\n    const file = fileRef.current.files[0];\n    if (file != null) {\n      const data = new FormData();\n      data.append('file', file);\n      data.append('name', 'test');\n      data.append('filename', value);\n      fetch(`/upload`, {\n        method: 'POST',\n        body: JSON.stringify({\n          \"name\": \"raihan\"\n        })\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        setPhoto(data.photo);\n      });\n    } else {\n      setName(\"please Upload Photo\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: photo,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getContent,\n        children: \"get photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postContent,\n        children: \"Upload Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"oAnteWyumg2EG6p4Fx34+atQUe4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","content","setContent","name","setName","photo","setPhoto","inputRef","fileRef","getContent","value","current","fetch","then","res","json","data","console","log","postContent","file","files","FormData","append","method","body","JSON","stringify","response","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/raiha/Desktop/fullstack/reactpractice/react-flask/server/src/App.jsx"],"sourcesContent":["import {useState,useEffect,useRef} from 'react';\n\nfunction App(){\n    const [content,setContent]=useState('')\n    const [name,setName]=useState('')\n    const [photo,setPhoto]=useState('')\n    const inputRef=useRef()\n    const fileRef=useRef()\n\n    function getContent(){\n        const value= inputRef.current.value\n        \n        fetch(`/home/${value}`).then((res)=>{\n            return res.json()\n        }).then((data)=>{\n            console.log(data)\n            setContent(data.data)\n            setName(data.name)\n            setPhoto(data.photo)\n        })\n    }\n\n    function postContent(){\n        const value= inputRef.current.value\n        const file= fileRef.current.files[0]\n\n        if(file!=null){\n            const data = new FormData()\n            data.append('file',file)\n            data.append('name','test')\n            data.append('filename',value)\n    \n            fetch(`/upload`,{\n                method: 'POST',\n                body: JSON.stringify({\"name\":\"raihan\"})\n            }).then((response)=>{\n                return response.json()\n            }).then((data)=>{\n                setPhoto(data.photo)\n            })\n        }\n        else{\n            setName(\"please Upload Photo\")\n        }\n\n    }\n\n    return(\n        <div>\n            <p>{content}</p>\n            <input type='text' ref={inputRef}></input>\n            <p>{name}</p>\n            <img src={photo} alt=\"\" />\n            <input type='file' ref={fileRef}></input>\n            <div>\n                <button onClick={getContent}>get photo</button>\n                <button onClick={postContent}>Upload Photo</button>\n            </div>\n        </div>\n    )\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}