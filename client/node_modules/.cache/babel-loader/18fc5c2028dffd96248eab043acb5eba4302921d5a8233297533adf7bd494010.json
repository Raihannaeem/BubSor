{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raiha\\\\Desktop\\\\react-flask\\\\client\\\\src\\\\audiorecorder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [audioFiles, setAudioFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const toggleRecording = async () => {\n    if (recording) {\n      stopRecording();\n    } else {\n      await startRecording();\n    }\n  };\n  const startRecording = async () => {\n    try {\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        throw new Error(\"Microphone access is not supported in this environment.\");\n      }\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/wav\"\n        });\n        const file = new File([audioBlob], `recording_${Date.now()}.wav`, {\n          type: \"audio/wav\"\n        });\n        const url = URL.createObjectURL(audioBlob);\n        const data = new FormData();\n        data.append('file', file);\n        fetch(\"/uploadone\", {\n          method: 'POST',\n          body: data\n        }).then(res => res.json()).then(data => console.log(data.msg)).catch(error => console.error(\"Upload error:\", error));\n        setAudioFiles(prevFiles => [...prevFiles, {\n          url,\n          file\n        }]);\n        audioChunksRef.current = [];\n      };\n      mediaRecorderRef.current.start();\n      setRecording(true);\n      setErrorMessage(null);\n    } catch (error) {\n      console.error(\"Error accessing microphone:\", error);\n      setErrorMessage(error.message);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Audio Recorder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleRecording,\n      children: recording ? \"Stop Recording\" : \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), audioFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recordings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), audioFiles.map((fileObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: fileObj.file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: fileObj.url,\n            type: \"audio/wav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), \"Your browser does not support the audio element.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"L8vC+JHdN5XFM5QVs/inTy6J6gY=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","AudioRecorder","_s","recording","setRecording","audioFiles","setAudioFiles","errorMessage","setErrorMessage","mediaRecorderRef","audioChunksRef","toggleRecording","stopRecording","startRecording","navigator","mediaDevices","getUserMedia","Error","stream","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","file","File","Date","now","url","URL","createObjectURL","FormData","append","fetch","method","body","then","res","json","console","log","msg","catch","error","prevFiles","start","message","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","length","map","fileObj","index","name","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/raiha/Desktop/react-flask/client/src/audiorecorder.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst AudioRecorder = () => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioFiles, setAudioFiles] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n\r\n  const toggleRecording = async () => {\r\n    if (recording) {\r\n      stopRecording();\r\n    } else {\r\n      await startRecording();\r\n    }\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        throw new Error(\"Microphone access is not supported in this environment.\");\r\n      }\r\n      \r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n      \r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        audioChunksRef.current.push(event.data);\r\n      };\r\n      \r\n      mediaRecorderRef.current.onstop = () => {\r\n        const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n        const file = new File([audioBlob], `recording_${Date.now()}.wav`, { type: \"audio/wav\" });\r\n        const url = URL.createObjectURL(audioBlob);\r\n\r\n        const data = new FormData();\r\n        data.append('file', file);\r\n\r\n        fetch(\"/uploadone\", {\r\n          method: 'POST',\r\n          body: data\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => console.log(data.msg))\r\n        .catch((error) => console.error(\"Upload error:\", error));\r\n\r\n        setAudioFiles((prevFiles) => [...prevFiles, { url, file }]);\r\n        audioChunksRef.current = [];\r\n      };\r\n\r\n      mediaRecorderRef.current.start();\r\n      setRecording(true);\r\n      setErrorMessage(null);\r\n    } catch (error) {\r\n      console.error(\"Error accessing microphone:\", error);\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Audio Recorder</h2>\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n      <button onClick={toggleRecording}>\r\n        {recording ? \"Stop Recording\" : \"Start Recording\"}\r\n      </button>\r\n      {audioFiles.length > 0 && (\r\n        <div>\r\n          <h3>Recordings</h3>\r\n          {audioFiles.map((fileObj, index) => (\r\n            <div key={index}>\r\n              <p>{fileObj.file.name}</p>\r\n              <audio controls>\r\n                <source src={fileObj.url} type=\"audio/wav\" />\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioRecorder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}